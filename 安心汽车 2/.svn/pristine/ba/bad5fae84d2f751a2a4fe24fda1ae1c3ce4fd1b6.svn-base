//
//  HAregisteViewController.m
//  安心汽车
//
//  Created by un2lock on 15/4/9.
//  Copyright (c) 2015年 ywkj. All rights reserved.
//

#import "HAregisteViewController.h"
#import "JKCountDownButton.h"
#import "HAUserTool.h"
#import "HAUserParam.h"
#import "HAUserResult.h"
@interface HAregisteViewController ()<UITextFieldDelegate>
/**手机号*/
@property(nonatomic,weak) UITextField *phoneText;
/**呢称*/
@property(nonatomic,weak) UITextField *nickText;
/**密码*/
@property(nonatomic,weak) UITextField *pwdText;
/**重复密码*/
@property(nonatomic,weak) UITextField *rPwdText;
/**验证码*/
@property(nonatomic,weak) UITextField *captcha;
/**验证码按钮*/
@property(nonatomic,weak) JKCountDownButton *captchaBtn;
@end

@implementation HAregisteViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor=[UIColor grayColor];
    
    //添加用户名和密码框
    UITextField *phoneText=[self createTextFiled:@"account_btnRegist" placeText:@"请输入手机号码" labelName:@"手机号码"];
    UILabel *phoneTextSplit=[[UILabel alloc] initWithFrame:CGRectMake(0, phoneText.y+phoneText.height-1, phoneText.width, 1)];
    phoneTextSplit.backgroundColor=[UIColor grayColor];
    [phoneText addSubview:phoneTextSplit];
    phoneText.y=40;
    self.phoneText=phoneText;
    [self.view addSubview:phoneText];
    
    UITextField *nickText=[self createTextFiled:@"account_btnRegist" placeText:@"请输入专属呢称" labelName:@"用户呢称"];
    UILabel *nickTextSplit=[[UILabel alloc] initWithFrame:CGRectMake(0, nickText.y+nickText.height-1, nickText.width, 1)];
    nickTextSplit.backgroundColor=[UIColor grayColor];
    [nickText addSubview:nickTextSplit];
    nickText.y=75;
    self.nickText=nickText;
    [self.view addSubview:nickText];
    
    UITextField *pwdText=[self createTextFiled:@"account_btnRegist" placeText:@"请输入密码" labelName:@"登录密码"];
    UILabel *pwdTextSplit=[[UILabel alloc] initWithFrame:CGRectMake(0, pwdText.y+pwdText.height-1, pwdText.width, 1)];
    pwdTextSplit.backgroundColor=[UIColor grayColor];
    [pwdText addSubview:pwdTextSplit];
    pwdText.y=110;
    pwdText.secureTextEntry=YES;
    self.pwdText=pwdText;
    [self.view addSubview:pwdText];
    
    UITextField *rPwdText=[self createTextFiled:@"account_btnRegist" placeText:@"请输入密码" labelName:@"确认密码"];
    UILabel *rPwdTextSplit=[[UILabel alloc] initWithFrame:CGRectMake(0, rPwdText.y+rPwdText.height-1, rPwdText.width, 1)];
    rPwdTextSplit.backgroundColor=[UIColor grayColor];
    [rPwdText addSubview:rPwdTextSplit];
    rPwdText.y=145;
    rPwdText.secureTextEntry=YES;
    self.rPwdText=rPwdText;
    [self.view addSubview:rPwdText];
    
    //添加验证码
    UITextField *captcha=[self createTextFiled:@"account_btnRegist" placeText:@"请输入验证码" labelName:@"验证码"];
    captcha.y=190;
    JKCountDownButton *captchaBtn=[[JKCountDownButton alloc] init];
    captchaBtn.titleLabel.font=[UIFont systemFontOfSize:13];
    
    captchaBtn = [JKCountDownButton buttonWithType:UIButtonTypeCustom];
    captchaBtn.frame = CGRectMake(0, 0, 90, 30);
    captchaBtn.titleLabel.font=[UIFont systemFontOfSize:13];
    [captchaBtn setTitle:@"获取验证码" forState:UIControlStateNormal];
    captchaBtn.backgroundColor = [UIColor colorWithHue:208/255.0 saturation:191/255.0 brightness:108/255.0 alpha:1.0];
    [self.view addSubview:captchaBtn];

    captchaBtn.width=captchaBtn.titleLabel.text.length*20;
    self.captchaBtn=captchaBtn;
    captcha.rightView=captchaBtn;
    captcha.rightViewMode=UITextFieldViewModeAlways;
    [captchaBtn addTarget:self action:@selector(getCaptcha:) forControlEvents:UIControlEventTouchUpInside];
    self.captcha=captcha;
    [self.view addSubview:captcha];
    
    
    //添加确认注册
    UIButton *registBtn=[self createButton:@"注册" imageName:@"account_btnRegist"];
    registBtn.x=20;
    registBtn.y=240;
    registBtn.width=ScreenWidth * 0.4;
    registBtn.height=47;
    [registBtn setBackgroundImage:[UIImage imageNamed:@"regist_bg"] forState:UIControlStateNormal];
    [registBtn addTarget:self action:@selector(regist) forControlEvents:UIControlEventTouchDown];
    [self.view addSubview:registBtn];
    
    //添加取消注册
    UIButton *cancelBtn=[self createButton:@"取消" imageName:@"account_btnlogin"];
    cancelBtn.x=ScreenWidth *0.55;
    cancelBtn.y=240;
    cancelBtn.width=ScreenWidth * 0.4;
    cancelBtn.height=47;
    [cancelBtn setBackgroundImage:[UIImage imageNamed:@"regist_bg"] forState:UIControlStateNormal];
    [cancelBtn addTarget:self action:@selector(cancel) forControlEvents:UIControlEventTouchDown];
    [self.view addSubview:cancelBtn];
    
}
/**
 *  获取验证码
 */
-(void) getCaptcha:(UIButton *)captchaBtn{
    //判断手机号是否输入正确
    NSString *userName= _phoneText.text;
    if(userName.length < 0 || [userName isEqualToString:@""]){
        [MBProgressHUD showError:@"帐号不能为空"];
        return ;
    }
    if(![self checkTel:userName]){
        [MBProgressHUD showError:@"帐号必须是手机号"];
        _phoneText.text=@"";
        return ;
    }
    //判断密码是否输入正确
    NSString *userPwd= _pwdText.text;
    NSString *userRpwd= _rPwdText.text;
    if(userPwd.length < 0 || [userPwd isEqualToString:@""]){
        [MBProgressHUD showError:@"密码不能为空"];
        return ;
    }
    if(userPwd.length<6){
        [MBProgressHUD showError:@"密码少于6位"];
        return ;
    }
    if(![userPwd isEqualToString:userRpwd]){
        [MBProgressHUD showError:@"两次密码不正确"];
        return ;
    }
    
    HAUserParam *param=[[HAUserParam alloc] init];
    param.userAccount=userName;
    [HAUserTool getcaptcha:param success:^(HAUserResult *result) {
        NSLog(@"result:%@",result);
        NSLog(@"");
    } failure:^(NSError *error) {
        
    }];
    
    
    /*************倒计时************/
    __block int timeout=59; //倒计时时间
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
    dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行
    dispatch_source_set_event_handler(_timer, ^{
        if(timeout<=0){ //倒计时结束，关闭
            dispatch_source_cancel(_timer);
            dispatch_async(dispatch_get_main_queue(), ^{
                //设置界面的按钮显示 根据自己需求设置
                [captchaBtn setTitle:@"发送验证码" forState:UIControlStateNormal];
                captchaBtn.userInteractionEnabled = YES;
            });
        }else{
            //            int minutes = timeout / 60;
            int seconds = timeout % 60;
            NSString *strTime = [NSString stringWithFormat:@"%.2d", seconds];
            dispatch_async(dispatch_get_main_queue(), ^{
                //设置界面的按钮显示 根据自己需求设置
                NSLog(@"____%@",strTime);
                [captchaBtn setTitle:[NSString stringWithFormat:@"%@秒后重新发送",strTime] forState:UIControlStateNormal];
                captchaBtn.userInteractionEnabled = NO;
                
            });
            timeout--;
        }
    });
    dispatch_resume(_timer);
    
    
}
/**
 *  注册
 */
-(void) regist{
    NSString *userName= _phoneText.text;
    if(userName.length < 0 || [userName isEqualToString:@""]){
        [MBProgressHUD showError:@"帐号不能为空"];
        return ;
    }
    if(![self checkTel:userName]){
        [MBProgressHUD showError:@"帐号必须是手机号"];
        _phoneText.text=@"";
        return ;
    }
    NSString *userPwd= _pwdText.text;
    NSString *userRpwd= _rPwdText.text;
    if(userPwd.length < 0 || [userPwd isEqualToString:@""]){
        [MBProgressHUD showError:@"密码不能为空"];
        return ;
    }
    if(userPwd.length<6){
        [MBProgressHUD showError:@"密码少于6位"];
        _pwdText.text=@"";
        _rPwdText.text=@"";
        return ;
    }
    if(![userPwd isEqualToString:userRpwd]){
        [MBProgressHUD showError:@"两次密码不正确"];
        return ;
    }
    NSString *captchaText=_captcha.text;
    if([captchaText isEqualToString:@""] || captchaText.length<0){
        [MBProgressHUD showError:@"请输入验证码"];
        return ;
    }
    HAUserParam *params=[[HAUserParam alloc] init];
    params.userAccount=userName;
    params.password=userPwd;
    params.phoneCode=captchaText;
    [HAUserTool registe:params success:^(HAUserResult *result) {
        if([result.result isEqualToString:@"success"]){
            [MBProgressHUD showError:@"注册成功"];
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                [self dismissModalViewControllerAnimated:YES];
            });
            return ;
        }
        [MBProgressHUD showError:result.result];
        _captcha.text=@"";
    } failure:^(NSError *error) {
        [MBProgressHUD showError:@"连接网络失败,请检查网络状态"];
    }];
}
/**
 *  取消注册
 */
-(void) cancel{
    [self dismissModalViewControllerAnimated:YES];
}
/**
 *  创建注册和取消按钮
 */
-(UIButton *) createButton:(NSString *) title imageName:(NSString *)imageName{
    UIButton *button=[[UIButton alloc] init];
    button.font=[UIFont systemFontOfSize:13];
    //    [button setBackgroundImage:[UIImage imageNamed:imageName] forState:UIControlStateNormal];
    [button setTitle:title forState:UIControlStateNormal];
    [button setTitle:title forState:UIControlEventTouchDown];
    return button;
}
/**
 *  验证手机号的正则表达式
 */
-(BOOL) checkTel:(NSString *) phoneNumber{
    NSString *regex = @"^((13[0-9])|(147)|(15[^4,\\D])|(18[0,5-9]))\\d{8}$";
    
    NSPredicate *pred = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", regex];
    
    BOOL isMatch = [pred evaluateWithObject:phoneNumber];
    
    if (!isMatch) {
        return NO;
    }
    return YES;
}
/**
 *  创建用户和密码等输入框
 */
-(UITextField *) createTextFiled:(NSString *) imageName placeText:(NSString *)placeText labelName:(NSString *) labelName{
    UITextField *filed=[[UITextField alloc] init];
    filed.x=0;
    filed.width=ScreenWidth;
    filed.height=35;
    
    [filed setBackgroundColor:[UIColor whiteColor]];
    filed.placeholder=placeText;
    filed.font=[UIFont systemFontOfSize:14];
    UILabel *leftLabel=[[UILabel alloc] init];
    [leftLabel setText:labelName];
    CGFloat leftLabelW=leftLabel.text.length * 20;
    leftLabel.frame=CGRectMake(0, 0, leftLabelW, filed.frame.size.height);
    leftLabel.font=[UIFont systemFontOfSize:14];
    filed.leftView=leftLabel;
    [filed.leftView setContentMode:UIViewContentModeRight];
    filed.leftViewMode=UITextFieldViewModeAlways;
    return filed;
}
-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
    [self.view endEditing:YES];
}
#pragma mark UITextFieldDelegate的实现方法
/**
 *  限制输入框的长度
 */
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if (textField == self.phoneText) {
        //如果输入的手机号大于11
        if (textField.text.length > 11) return NO;
    }
    
    return YES;
}
- (void)textFieldDidChange:(UITextField *)textField
{
    if (textField == self.phoneText) {
        if (textField.text.length > 11) {
            textField.text = [textField.text substringToIndex:11];
        }
    }
}

-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    if(textField==self.rPwdText){
        [textField resignFirstResponder];
    }
    
    return YES;
}
@end
